name: Tests and Code Coverage Front  

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'coverage/bobapp/**'  # Ignore les changements dans le dossier de couverture pour √©viter les boucles
  pull_request:
    branches: [ "main" ]  

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front 

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      # √âtape 1 : R√©cup√©ration du code source du d√©p√¥t
      - uses: actions/checkout@v3

      # √âtape 2 : Configuration de la version de Node.js sp√©cifi√©e dans le matrix
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # √âtape 3 : Installation des d√©pendances Node.js
      - name: Install dependencies
        run: npm install

      # √âtape 4 : Ex√©cution des tests avec g√©n√©ration de la couverture du code
      - name: Test coverage
        run: npm run test-coverage

      # √âtape 5 : V√©rifier le rapport de couverture
      - name: Check Coverage Report
        run: cat coverage/bobapp/index.html
        
      # √âtape 6 : V√©rifie les fichiers modifi√©s
      - name: Check modified files
        run: git status

      # √âtape 7 : Commit et push conditionnel du rapport de couverture
      - name: Commit and Push Karma Code Coverage Report
        if: github.ref == 'refs/heads/main'
        env:
          PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}  # Utilisez un secret GitHub pour s√©curiser le jeton d'acc√®s
        run: |
          # Configuration de l'identit√© Git pour le commit
          git config --global user.email "benyahia.zaim@gmail.com"
          git config --global user.name "zcbe"
          
          # Synchronisation avec la branche "main" pour √©viter les conflits
          git fetch
          git checkout main
          git pull origin main
          
          # Forcer l'ajout du rapport de couverture dans le r√©pertoire "coverage/bobapp"
          git add -f coverage/bobapp
          
          # V√©rifie s'il y a des modifications √† committer
          if ! git diff-index --quiet HEAD; then
            # Cr√©ation d'un commit pour le rapport de couverture de code
            git commit -m "Add Karma code coverage report"
            # Pouss√©e du commit vers la branche "main" sur le d√©p√¥t
            git push https://$PUSH_TOKEN@github.com/zcbe/Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD.git main
          else
            echo "Aucun changement √† pousser."
          fi

      # √âtape 8 : Affiche le statut des tests avec une ic√¥ne
      - run: echo "üçè Npm run test-coverage's status is ${{ job.status }}."
 